namespace Microsoft.Extensions.DependencyInjection.SourceGenerators.Models.Generated;

public static class ScopedAttribute
{
    public const string ShortName = "Scoped";

    public const string Name = $"{ShortName}Attribute";

    public const string GlobalName = $"{Name}.g.cs";

    public const string Source =
        $$"""
         // <auto-generated/>

         #nullable enable

         using System;

         namespace {{DependencyInjectionSourceGenerator.Namespace}};

         [AttributeUsage(AttributeTargets.Class)]
         internal class {{Name}}(string? key = null) : Attribute
         {
            public string? Key =>
                key;
         }

         [AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Class, Inherited = false, AllowMultiple = true)]
         internal class {{Name}}<TImpl>(string? key = null) : {{Name}}(key);

         [AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Class, Inherited = false, AllowMultiple = true)]
         internal sealed class {{Name}}<TContract, TImpl>(string? key = null) : {{Name}}<TImpl>(key);
         """;
}